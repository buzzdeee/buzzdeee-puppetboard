<% if @import_os -%>
import os
<% end -%>

PUPPETDB_HOST = '<%= @puppetdb_host %>'
PUPPETDB_PORT = <%= @puppetdb_port %>
<% if @puppetdb_ssl_verify -%>
PUPPETDB_SSL_VERIFY = '<%= @puppetdb_ca %>'
<% else -%>
PUPPETDB_SSL_VERIFY = False
<% end -%>
PUPPETDB_KEY = '<%= @puppetdb_key %>'
PUPPETDB_CERT = '<%= @puppetdb_cert %>'
PUPPETDB_TIMEOUT = <%= @puppetdb_timeout %>
<% if @default_environment -%>
DEFAULT_ENVIRONMENT = '<%= @default_environment %>'
<% end -%>
DEV_LISTEN_HOST = '<%= @dev_listen_host %>'
DEV_LISTEN_PORT = <%= @dev_listen_port %>
UNRESPONSIVE_HOURS = <%= @unresponsive_hours %>
ENABLE_QUERY = <%= @enable_query %>
LOGLEVEL = '<%= @puppetboard_loglevel %>'
<% if (@secret_key and @secret_key == 'default') -%>
SECRET_KEY = str(os.urandom(24))
<% elsif @secret_key -%>
SECRET_KEY = <%= @secret_key %>
<% end -%>
<% if @dev_coffee_location -%>
DEV_COFFEE_LOCATION = '<%= @dev_coffee_location %>'
<% end -%>
<% if @localize_timestamp -%>
LOCALISE_TIMESTAMP = <%= @localize_timestamp %>
<% end -%>
<% if @reports_count -%>
REPORTS_COUNT = <%= @reports_count %>
<% end -%>
<% if @offline_mode -%>
OFFLINE_MODE = <%= @offline_mode %>
<% end -%>
<% if @enable_catalog -%>
ENABLE_CATALOG = <%= @enable_catalog %>
<% end -%>
<% if @overview_filter -%>
OVERVIEW_FILTER = <%= @overview_filter %>
<% end -%>
<% if @graph_facts -%>
GRAPH_FACTS = [
  <%- @graph_facts.each do |graph_fact| -%>
                '<%= graph_fact %>',
  <%- end -%>
              ]
<% end -%>
<% if @inventory_facts -%>
INVENTORY_FACTS = [
  <%- @inventory_facts.each do |inventory_fact| -%>
                    ( '<%= inventory_fact[0] %>', '<%= inventory_fact[1] %>'),
  <%- end -%>
                  ]
<% end -%>

INVENTORY_FACT_TEMPLATES = {
    'trusted': (
        """<a href="{{url_for('node', env=current_env, node_name=value.certname)}}">"""
        """{{value.hostname}}"""
        """</a>"""
    ),
    'os': "{{ fact_os_detection(value) }}",
}

<% if @refresh_rate -%>
REFRESH_RATE = <%= @refresh_rate %>
<% end -%>

<% if @daily_reports_chart_enabled -%>
DAILY_REPORTS_CHART_ENABLED = <%= @daily_reports_chart_enabled %>
DAILY_REPORTS_CHART_DAYS = <%= @daily_reports_chart_days %>
<% end -%>

<% if @normal_table_count -%>
NORMAL_TABLE_COUNT = <%= @normal_table_count %>
<% end -%>
<% if @little_table_count -%>
LITTLE_TABLE_COUNT =  <%= @little_table_count %>
<% end -%>
<% if @table_count_selector -%>
TABLE_COUNT_SELECTOR = <%= @table_count_selector %>
<% end -%>
<% if @displayed_metrics -%>
DISPLAYED_METRICS = [
  <%- @displayed_metrics.each do |displayed_metric| -%>
                '<%= displayed_metric %>',
  <%- end -%>

                  ]
<% if @puppetdb_proto -%>
PUPPETDB_PROTO = '<%= @puppetdb_proto %>'
<% end -%>
<% if @puppetdb_with_event_numbers -%>
WITH_EVENT_NUMBERS = <%= @puppetdb_with_event_numbers %>
<% end -%>
<% if @show_error_as -%>
SHOW_ERROR_AS = '<%= @show_error_as %>'
<% end -%>
<% if @code_prefix_to_remove -%>
CODE_PREFIX_TO_REMOVE = '<%= @code_prefix_to_remove%>'
<% end -%>
<% end -%>
FAVORITE_ENVS = [
    'production',
]

ENABLE_CLASS = True
# mapping between the status of the events (from PuppetDB) and the columns of the table to display
CLASS_EVENTS_STATUS_COLUMNS = [
    ('skipped', 'Skipped'),
    ('failure', 'Failure'),
    ('success', 'Success'),
    ('noop', 'Noop'),
]
# Type of caching object to use when `SCHEDULER_ENABLED` is set to `True`.
# If more than one worker, use a shared backend (e.g. `MemcachedCache`)
# to allow the sharing of the cache between the processes.
CACHE_TYPE = 'SimpleCache'
# Cache litefime in second
CACHE_DEFAULT_TIMEOUT = 3600

# List of scheduled jobs to trigger
#   * `id`: job's ID
#   * `func`: full path of the function to execute
#   * `trigger`: should be 'interval' if you want to run the job at regular intervals
#   * `seconds`: number of seconds between 2 triggered jobs
SCHEDULER_JOBS = [{
    'id': 'do_build_async_cache_1',
    'func': 'puppetboard.schedulers.classes:build_async_cache',
    'trigger': 'interval',
    'seconds': 300,
}]
SCHEDULER_ENABLED = False
SCHEDULER_LOCK_BIND_PORT = 49100
